//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ground_Control_Software__GCS_.DTSService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordingSet", Namespace="http://schemas.datacontract.org/2004/07/RCCFLib.Records")]
    [System.SerializableAttribute()]
    public partial class RecordingSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecordingRunIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RecordingSetDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordingSetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Ground_Control_Software__GCS_.DTSService.Recording[] RecordingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecordingRunId {
            get {
                return this.RecordingRunIdField;
            }
            set {
                if ((this.RecordingRunIdField.Equals(value) != true)) {
                    this.RecordingRunIdField = value;
                    this.RaisePropertyChanged("RecordingRunId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RecordingSetDateTime {
            get {
                return this.RecordingSetDateTimeField;
            }
            set {
                if ((this.RecordingSetDateTimeField.Equals(value) != true)) {
                    this.RecordingSetDateTimeField = value;
                    this.RaisePropertyChanged("RecordingSetDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordingSetId {
            get {
                return this.RecordingSetIdField;
            }
            set {
                if ((this.RecordingSetIdField.Equals(value) != true)) {
                    this.RecordingSetIdField = value;
                    this.RaisePropertyChanged("RecordingSetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ground_Control_Software__GCS_.DTSService.Recording[] Recordings {
            get {
                return this.RecordingsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordingsField, value) != true)) {
                    this.RecordingsField = value;
                    this.RaisePropertyChanged("Recordings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Recording", Namespace="http://schemas.datacontract.org/2004/07/RCCFLib.Records")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ground_Control_Software__GCS_.DTSService.RecordingSet[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ground_Control_Software__GCS_.DTSService.RecordingSet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ground_Control_Software__GCS_.DTSService.Recording[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ground_Control_Software__GCS_.DTSService.ValueType))]
    public partial class Recording : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Ground_Control_Software__GCS_.DTSService.ValueType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ground_Control_Software__GCS_.DTSService.ValueType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValueType", Namespace="http://schemas.datacontract.org/2004/07/RCCFLib.Records")]
    public enum ValueType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Integer = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Float = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateTime = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DTSService.IDTSService")]
    public interface IDTSService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDTSService/GetRecordingSetSeries", ReplyAction="http://tempuri.org/IDTSService/GetRecordingSetSeriesResponse")]
        Ground_Control_Software__GCS_.DTSService.RecordingSet[] GetRecordingSetSeries(int recordingSetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDTSService/GetRecordingSetSeriesFrom", ReplyAction="http://tempuri.org/IDTSService/GetRecordingSetSeriesFromResponse")]
        Ground_Control_Software__GCS_.DTSService.RecordingSet[] GetRecordingSetSeriesFrom(int recordingSetId, System.DateTime fromDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDTSService/GetRecordingSetSeriesFromTo", ReplyAction="http://tempuri.org/IDTSService/GetRecordingSetSeriesFromToResponse")]
        Ground_Control_Software__GCS_.DTSService.RecordingSet[] GetRecordingSetSeriesFromTo(int recordingSetId, System.DateTime fromDateTime, System.DateTime toDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDTSService/GetLatestReading", ReplyAction="http://tempuri.org/IDTSService/GetLatestReadingResponse")]
        Ground_Control_Software__GCS_.DTSService.RecordingSet GetLatestReading(int recordingSetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDTSService/AddRecordingSet", ReplyAction="http://tempuri.org/IDTSService/AddRecordingSetResponse")]
        void AddRecordingSet(Ground_Control_Software__GCS_.DTSService.RecordingSet recordingSet);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDTSServiceChannel : Ground_Control_Software__GCS_.DTSService.IDTSService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DTSServiceClient : System.ServiceModel.ClientBase<Ground_Control_Software__GCS_.DTSService.IDTSService>, Ground_Control_Software__GCS_.DTSService.IDTSService {
        
        public DTSServiceClient() {
        }
        
        public DTSServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DTSServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DTSServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DTSServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Ground_Control_Software__GCS_.DTSService.RecordingSet[] GetRecordingSetSeries(int recordingSetId) {
            return base.Channel.GetRecordingSetSeries(recordingSetId);
        }
        
        public Ground_Control_Software__GCS_.DTSService.RecordingSet[] GetRecordingSetSeriesFrom(int recordingSetId, System.DateTime fromDateTime) {
            return base.Channel.GetRecordingSetSeriesFrom(recordingSetId, fromDateTime);
        }
        
        public Ground_Control_Software__GCS_.DTSService.RecordingSet[] GetRecordingSetSeriesFromTo(int recordingSetId, System.DateTime fromDateTime, System.DateTime toDateTime) {
            return base.Channel.GetRecordingSetSeriesFromTo(recordingSetId, fromDateTime, toDateTime);
        }
        
        public Ground_Control_Software__GCS_.DTSService.RecordingSet GetLatestReading(int recordingSetId) {
            return base.Channel.GetLatestReading(recordingSetId);
        }
        
        public void AddRecordingSet(Ground_Control_Software__GCS_.DTSService.RecordingSet recordingSet) {
            base.Channel.AddRecordingSet(recordingSet);
        }
    }
}
